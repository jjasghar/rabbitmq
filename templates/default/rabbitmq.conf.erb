###
## Generated by Chef
###

default_user = <%= node['rabbitmq']['default_user'] %>
default_pass = <%= node['rabbitmq']['default_pass'] %>
heartbeat = <%= node['rabbitmq']['heartbeat'] %>
auth_backends.1 = <%= node['rabbitmq']['auth_backends'] %>

<% if node['rabbitmq']['web_console_ssl'] -%>
  <% if node['rabbitmq']['management']['load_definitions'] %>
management.load_definitions = <%= node['rabbitmq']['management']['definitions_file'] %>
  <% end -%>
  <% if node['rabbitmq']['web_console_interface'] -%>
management.ssl.ip = <%= node['rabbitmq']['web_console_interface'] %>
  <% end -%>
management.ssl.port = <%= node['rabbitmq']['web_console_ssl_port'] %>
management.ssl.cacertfile = <%= node['rabbitmq']['ssl_cacert'] %>
management.ssl.certfile = <%= node['rabbitmq']['ssl_cert'] %>
management.ssl.keyfile = <%= node['rabbitmq']['ssl_key'] %>
  <% if @ssl_versions -%>
<%= @ssl_versions.tr("'", '').split(",").map.with_index(1) { |ver, index| "management.ssl.versions.#{index} = #{ver}" }.join("\n") %>
  <% end %>
  <% if @ssl_ciphers -%>
<%= @ssl_ciphers.tr('"', '').split(',').map.with_index(1) { |cipher, index| "management.ssl.ciphers.#{index} = #{cipher}" }.join("\n") %>
  <% end %>
<% else %>
  <% if node['rabbitmq']['management']['load_definitions'] %>
management.load_definitions = <%= node['rabbitmq']['management']['definitions_file'] %>
  <% end -%>
management.tcp.port = <%= node['rabbitmq']['web_console_port'] %>
  <% if node['rabbitmq']['web_console_interface'] -%>
management.tcp.ip = <%= node['rabbitmq']['web_console_interface'] %>
  <% end -%>
<% end %>

<% if node['rabbitmq']['clustering']['enable'] -%>
# Cluster
  <% if node['rabbitmq']['clustering']['use_auto_clustering'] -%>
cluster_formation.peer_discovery_backend = classic_config
<%= node['rabbitmq']['clustering']['cluster_nodes'].map.with_index(1) { |instance, index| "cluster_formation.classic_config.nodes.#{index} = #{instance['name']}" }.join("\n") %>
  <% end %>
  <% if node['rabbitmq']['clustering']['cluster_formation']['peer_discovery_backend'] -%>
cluster_formation.peer_discovery_backend = <%= node['rabbitmq']['clustering']['cluster_formation']['peer_discovery_backend'] %>
  <% @backend = node['rabbitmq']['clustering']['cluster_formation']['peer_discovery_backend'] %>
<%= node['rabbitmq']['clustering']['cluster_formation'][@backend].map { |key, value| "cluster_formation.#{@backend}.#{key} = #{value}" }.join("\n") %>
  <% end %>
cluster_partition_handling = <%= node['rabbitmq']['clustering']['cluster_partition_handling'] %>
<% end %>

<% if node['rabbitmq']['ssl'] -%>
# SSL
  <% if node['rabbitmq']['ssl_listen_interface'] %>
listeners.ssl.1 = <%= node['rabbitmq']['ssl_listen_interface'] %>:<%= node['rabbitmq']['ssl_port'] %>
  <% else %>
listeners.ssl.default = <%= node['rabbitmq']['ssl_port'] %>
  <% end %>
ssl_options.cacertfile = <%= node['rabbitmq']['ssl_cacert'] %>
ssl_options.certfile = <%= node['rabbitmq']['ssl_cert'] %>
ssl_options.keyfile = <%= node['rabbitmq']['ssl_key'] %>
ssl_options.verify = <%= node['rabbitmq']['ssl_verify'] %>
ssl_options.fail_if_no_peer_cert = <%= node['rabbitmq']['ssl_fail_if_no_peer_cert'] %>
  <% if @ssl_versions -%>
<%= @ssl_versions.tr("'", '').split(",").map.with_index(1) { |ver, index| "ssl_options.versions.#{index} = #{ver}" }.join("\n") %>
  <% end %>
  <% if @ssl_ciphers -%>
<%= @ssl_ciphers.tr('"', '').split(',').map.with_index(1) { |cipher, index| "ssl_options.ciphers.#{index} = #{cipher}" }.join("\n") %>
  <% end %>
  <% if node['rabbitmq']['ssl_secure_renegotiate'] -%>
ssl_options.secure_renegotiate = <%= node['rabbitmq']['ssl_secure_renegotiate'] %>
  <% end -%>
  <% if node['rabbitmq']['ssl_honor_cipher_order'] -%>
ssl_options.honor_cipher_order = <%= node['rabbitmq']['ssl_honor_cipher_order'] %>
  <% end -%>
  <% if node['rabbitmq']['ssl_honor_ecc_order'] -%>
ssl_options.honor_ecc_order = <%= node['rabbitmq']['ssl_honor_ecc_order'] %>
  <% end -%>
<% end %>

# Networking
<% if node['rabbitmq']['tcp_listen_interface'] -%>
listeners.tcp.1 = <%= node['rabbitmq']['tcp_listen_interface'] %>:<%= node['rabbitmq']['port'] %>
<% else %>
listeners.tcp.default = <%= node['rabbitmq']['port'] %>
<% end -%>
<% if node['rabbitmq']['tcp_listen'] -%>
tcp_listen_options.backlog = <%= node['rabbitmq']['tcp_listen_backlog'] %>
tcp_listen_options.nodelay = <%= node['rabbitmq']['tcp_listen_nodelay'] %>
tcp_listen_options.exit_on_close = <%= node['rabbitmq']['tcp_listen_exit_on_close'] %>
tcp_listen_options.keepalive = <%= node['rabbitmq']['tcp_listen_keepalive'] %>
  <% if node['rabbitmq']['tcp_listen_buffer'] -%>
tcp_listen_options.buffer = <%= node['rabbitmq']['tcp_listen_buffer'] %>
  <% end -%>
  <% if node['rabbitmq']['tcp_listen_sndbuf'] -%>
tcp_listen_options.sndbuf = <%= node['rabbitmq']['tcp_listen_sndbuf'] %>
  <% end -%>
  <% if node['rabbitmq']['tcp_listen_recbuf'] -%>
tcp_listen_options.recbuf = <%= node['rabbitmq']['tcp_listen_recbuf'] %>
  <% end -%>
tcp_listen_options.linger.on = <%= node['rabbitmq']['tcp_listen_linger'] %>
tcp_listen_options.linger.timeout = <%= node['rabbitmq']['tcp_listen_linger_timeout'] %>
<% end %>

<% if node['rabbitmq']['log_levels'] -%>
# Logging
<%= node['rabbitmq']['log_levels'].map{ |key, value| "log.#{key}.level = #{value} "}.join("\n") %>
<% end %>

<% if node['rabbitmq']['disk_free_limit_relative'] -%>
disk_free_limit.relative = <%= node['rabbitmq']['disk_free_limit_relative'].to_f %>
<% end %>
<% if node['rabbitmq']['disk_free_limit'] -%>
disk_free_limit.absolute = <%= node['rabbitmq']['disk_free_limit'] %>
<% end %>
<% if node['rabbitmq']['vm_memory_high_watermark'] -%>
vm_memory_high_watermark.relative = <%= node['rabbitmq']['vm_memory_high_watermark'] %>
<% end %>
<% if node['rabbitmq']['channel_max'] -%>
channel_max = <%= node['rabbitmq']['channel_max'] %>
<% end %>
<% if node['rabbitmq']['loopback_users'] -%>
<%= node['rabbitmq']['loopback_users'].map { |user| "loopback_users.#{user} = true" }.join("\n") %>
<% end %>

<% node['rabbitmq']['additional_rabbit_configs'].each do |key,value|  -%>
<%= key %> = <%= value %>
<% end -%>

<% node['rabbitmq']['conf'].each do |key,value|  -%>
<%= key %> = <%= value %>
<% end -%>
